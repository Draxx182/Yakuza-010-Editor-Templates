//------------------------------------------------
//--- 010 Editor v10.0.2 Binary Template
//
//      File: hcb.bt
//   Authors: Timo654
//   Version: 1.0
//   Purpose: Parse .hcb files
//  Category: 
// File Mask: *.hcb
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "../../Common/includes/include.h"

local u32 headerColor = SetRandomBackColor();

typedef struct
{
    SetBackColor( headerColor );

    BigEndian();
    char Magic[4];  // hitc

    u16 EndianCheck <format=hex>;
    u16 Empty;
    u16 Unk1;
	u16 Unk2;
    u32 Empty2;
	u32 Count;
	float Unk4;
	u32 Unk5;
	u32 Empty3;
	

    {
        local int i;
        struct
       {
         for ( i = 0; i < Count; i++ )
           {
               struct TBone Bone;
           }
        } Bones;
   }
    
} THcb <optimize=false>;

typedef struct
{
	SetRandomBackColor();
    u32 Unk6;
	u32 Unk7;
	u32 Unk8;
	u32 Unk10;
	char BoneName1[16];
	char BoneName2[16];
	float Unk11;
	float Unk12;
	float Unk13;
	float Unk14;
	float Unk15;
	float Unk16;
	float Unk17;
	float Unk18;
    
    
} TBone <read=ReadBone>;

string ReadBone( TBone& value )
{
    local string bones = "";
    
    SPrintf( bones, "%s, %s",
        value.BoneName1,
        value.BoneName2);
    
    return bones;
    
}


THcb Hcb;
